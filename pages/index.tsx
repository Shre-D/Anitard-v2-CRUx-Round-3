import Head from "next/head";
import Header from "../components/Header";
import { useState } from "react";
import HomeDisplay from "../components/HomeDisplay";
import Link from "next/link";
import HomeImages from "../components/HomeImages";
import SearchOutlinedIcon from "@mui/icons-material/SearchOutlined";

export default function Home() {
  const [animeList, setAnimeList] = useState([]);
  const [mangaList, setMangaList] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [searched, setSearched] = useState(false);
  const [search, setSearch] = useState("");

  function refreshPage() {
    window.location.reload();
  }

  const getSearchResult = async (query: string) => {
    const searchResultAnime = await fetch(
      `https://api.jikan.moe/v4/anime?q=${query}`
    ).then((res2) => res2.json());
    const searchResultManga = await fetch(
      `https://api.jikan.moe/v4/manga?q=${query}`
    ).then((res2) => res2.json());
    setAnimeList(searchResultAnime.data);
    setMangaList(searchResultManga.data);
    setIsLoading(true);
  };

  const HandleSearch = (e: any) => {
    e.preventDefault();
    setSearched(true);
    getSearchResult(search);
  };

  return (
    <div>
      <Head>
        <title>Anitard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/otonari.png" />
      </Head>
      <Header />
      <main className="pb-24">
        <div className="pt-24">
          <div className="transition-1000 ">
            <Link href="/" onClick={refreshPage}>
              <h1 className="text-8xl pb-6 flex items-center justify-center font-medium font-manrope text-transparent bg-clip-text bg-gradient-to-r from-blue-600 via-purple-400 to-pink-500 hover:white">
                ANITARD
              </h1>
            </Link>
          </div>
          <div className="grid place-items-center">
            <form className="" onSubmit={HandleSearch}>
              <input
                type="text"
                placeholder="🔍 Search here..."
                className="transition-200 pl-4 bg-white text-black font-semibold rounded-3xl h-14 w-[90vh] hover:bg-gray-200"
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                required
              />
            </form>
            <div className="pt-12">
              One place to find your favourite manga and anime!
            </div>
          </div>
        </div>
        <div>
          {searched ? (
            <div className="flex text-2xl gap-4">
              <div>
                {isLoading ? (
                  <div>
                    <div className="flex ml-6">
                      Search Results
                      <SearchOutlinedIcon style={{ fontSize: 32 }} />
                    </div>
                    <div className="mt-6">
                      <HomeDisplay
                        animeList={animeList}
                        mangaList={mangaList}
                        searched={searched}
                      />
                    </div>
                  </div>
                ) : (
                  <div
                    role="status"
                    className="space-y-8 animate-pulse md:space-y-0 md:space-x-8 md:flex md:items-center"
                  >
                    <div className="ml-6 h-10 bg-gray-200 rounded-full dark:bg-gray-700 w-32 mb-4"></div>

                    <div className="flex p-6">
                      <div className="mr-24">
                        <div className="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-32 mb-4"></div>
                        <div className="grid grid-cols-3 gap-5">
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                        </div>
                      </div>
                      <div className="">
                        <div className="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-32 mb-4"></div>
                        <div className="grid grid-cols-3 gap-5">
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                          <div className="h-80 w-[28vh] bg-gray-300 rounded-3xl  dark:bg-gray-700"></div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          ) : (
            <HomeImages />
          )}
        </div>
      </main>
    </div>
  );
}
